{"version":3,"sources":["images/logo.svg","components/AppHeader/index.js","components/AppLogo/index.js","components/CardDetails/index.js","components/CardSearch/CardSearch.js","components/CardSearchResults/index.js","components/App/index.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppHeader","_ref","children","react_default","a","createElement","className","AppLogo","src","logo","alt","getImage","card","concat","id","name","width","height","CardDetails","closeCardDetails","onClick","CardSearch","handleSearch","type","onChange","CardSearchResults","results","handleClick","es","data","columns","Header","accessor","maxWidth","Cell","row","rarity","toLowerCase","defaultSorted","defaultPageSize","showPagination","getTdProps","state","rowInfo","column","instance","e","handleOriginal","original","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchResults","cards","selectedCard","bind","assertThisInitialized","setSelectedCard","components_AppHeader","components_AppLogo","components_CardSearch_CardSearch","length","components_CardSearchResults","components_CardDetails","search","target","value","filteredResults","filter","hasOwnProperty","includes","text","setState","Component","defaultProps","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.41a1c1df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.53582c61.svg\";","import React from 'react'\nimport './AppHeader.css'\n\nconst AppHeader = ({ children }) => <div className=\"AppHeader\">{children}</div>\n\nexport default AppHeader\n","import React from 'react'\nimport logo from '../../images/logo.svg'\nimport './AppLogo.css'\n\nconst AppLogo = () => (\n  <div className=\"AppLogo\">\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  </div>\n)\n\nexport default AppLogo\n","import React from 'react'\nimport './CardDetails.css'\n\nconst CardDetails = ({ card, closeCardDetails }) => (\n  <div className=\"CardDetails\" onClick={closeCardDetails}>\n    {getImage(card)}\n  </div>\n)\n\nconst getImage = card => {\n  const baseUrl = 'https://art.hearthstonejson.com/v1/render/latest/enUS/256x'\n  const src = `${baseUrl}/${card.id}.png`\n\n  return <img src={src} alt={card.name} width=\"256\" height=\"369\" />\n}\n\nexport default CardDetails\n","import React from 'react'\nimport './CardSearch.css'\n\nconst CardSearch = ({ handleSearch }) => (\n  <div className=\"CardSearch\">\n    <input type=\"text\" onChange={handleSearch} />\n  </div>\n)\n\nexport default CardSearch\n","import React from 'react'\nimport ReactTable from 'react-table'\nimport './CardSearchResults.css'\nimport 'react-table/react-table.css'\n\nconst CardSearchResults = ({ results, handleClick }) => (\n  <div>\n    <ReactTable\n      data={results}\n      columns={[\n        {\n          Header: 'Rarity',\n          accessor: 'rarity',\n          maxWidth: 90\n        },\n        {\n          Header: 'Name',\n          accessor: 'name',\n          Cell: data => (\n            <span className={data.row.rarity.toLowerCase()}>\n              {data.row.name}\n            </span>\n          )\n        },\n        {\n          Header: 'Type',\n          accessor: 'type',\n          maxWidth: 70\n        },\n        {\n          Header: 'Class',\n          accessor: 'cardClass',\n          maxWidth: 80\n        },\n        {\n          Header: 'Mana',\n          accessor: 'cost',\n          maxWidth: 45\n        },\n        {\n          Header: 'Attack',\n          accessor: 'attack',\n          maxWidth: 55\n        },\n        {\n          Header: 'Health',\n          accessor: 'health',\n          maxWidth: 55\n        },\n        {\n          Header: 'Set',\n          accessor: 'set',\n          maxWidth: 90\n        }\n      ]}\n      defaultSorted={[\n        {\n          id: 'name'\n        }\n      ]}\n      className=\"CardSearchResults -highlight\"\n      defaultPageSize={10}\n      showPagination={true}\n      getTdProps={(state, rowInfo, column, instance) => {\n        return {\n          onClick: (e, handleOriginal) => {\n            if (handleOriginal) {\n              handleOriginal()\n            }\n\n            handleClick(rowInfo.original)\n          }\n        }\n      }}\n    />\n  </div>\n)\n\nexport default CardSearchResults\n","import React, { Component } from 'react'\nimport AppHeader from '../AppHeader'\nimport AppLogo from '../AppLogo'\nimport CardDetails from '../CardDetails'\nimport CardSearch from '../CardSearch/CardSearch'\nimport CardSearchResults from '../CardSearchResults'\nimport cards from '../../cards/cards.json'\nimport './App.css'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      searchResults: this.props.cards,\n      selectedCard: null\n    }\n\n    this.handleSearch = this.handleSearch.bind(this)\n    this.setSelectedCard = this.setSelectedCard.bind(this)\n    this.closeCardDetails = this.closeCardDetails.bind(this)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <AppHeader>\n          <AppLogo />\n          <CardSearch\n            cards={this.props.cards}\n            handleSearch={this.handleSearch}\n          />\n        </AppHeader>\n        {this.state.searchResults.length > 0 ? (\n          <CardSearchResults\n            results={this.state.searchResults}\n            handleClick={this.setSelectedCard}\n          />\n        ) : null}\n        {!!this.state.selectedCard ? (\n          <CardDetails\n            card={this.state.selectedCard}\n            closeCardDetails={this.closeCardDetails}\n          />\n        ) : null}\n      </div>\n    )\n  }\n\n  handleSearch(e) {\n    const search = e.target.value.toLowerCase()\n\n    const filteredResults = this.props.cards.filter(\n      card =>\n        (card.hasOwnProperty('name') &&\n          card.name.toLowerCase().includes(search)) ||\n        (card.hasOwnProperty('text') &&\n          card.text.toLowerCase().includes(search))\n    )\n\n    this.setState({ searchResults: filteredResults })\n  }\n\n  setSelectedCard(card) {\n    this.setState({ selectedCard: card })\n  }\n\n  closeCardDetails() {\n    this.setState({ selectedCard: null })\n  }\n}\n\nApp.defaultProps = {\n  cards\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}